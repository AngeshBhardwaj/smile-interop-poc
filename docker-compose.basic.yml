services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: smile-rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - smile-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: smile-jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # Jaeger collector HTTP
      - "14250:14250"   # Jaeger collector gRPC
      - "6831:6831/udp" # Jaeger agent UDP
      - "6832:6832/udp" # Jaeger agent UDP
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
    networks:
      - smile-network

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: smile-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - smile-network

  # Grafana for Metrics Visualization
  grafana:
    image: grafana/grafana:10.4.1
    container_name: smile-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - smile-network

  # Redis for Caching
  redis:
    image: redis:7.2-alpine
    container_name: smile-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smile-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  rabbitmq_data:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  smile-network:
    driver: bridge